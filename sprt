#!/bin/dash
date=$(date '+%Y-%m-%d_%H-%M-%S')
sprt_dir=$HOME/coding/sprt
use_engine_names=0
run_sprt=1
root_dir=.
default_concurrency=8
default_rounds=7500
default_rating_interval=250

tc=8+0.08
variant=standard
concurrency=$default_concurrency
elo0=0
elo1=5
rounds=$default_rounds
rating_interval=$default_rating_interval
opening_file=$sprt_dir/UHO_XXL_2022_+110_+139.epd

# clean up before exiting
die() {
	# don't delete the given engines if we're not using branches
	if [ $use_engine_names -eq 1 ]; then
		exit 0
	fi

	if [ -n $branch ]; then
		git checkout $branch
	fi

	if [ -n $new_branch -a -e $new_cmd ]; then
		rm -f $new_cmd
	fi
	if [ -n $base_branch -a -e $base_cmd ]; then
		rm -f $base_cmd
	fi

	exit 0
}

# print help
help() {
	echo "sprt - a simple wrapper over \`cutechess-cli\` to run SPRTs."
	echo "Usage: sprt [-r <root_dir>] [-c <threads>] [-p] [-g] [-s]"
	echo "            [-t <rounds>] [-i <interval>] [-b <branch>] [-e] [-h]"
	echo ""
	echo "Options:"
	echo "    -r <root_dir>"
	echo "        Set the root directory for the two engines or git branch to"
	echo "        this path. Default is the current directory."
	echo "    -c <threads>"
	echo "        Run <threads> games in parallel. Default $default_concurrency."
	echo "    -p"
	echo "        Run an SPRT against the two engines. This is the default."
	echo "    -g"
	echo "        If '-p' is set, use gainer bounds (elo0 = 0, elo1 = 5). This"
	echo "        is the default."
	echo "    -s"
	echo "        if '-p' is set, use simplification bounds (elo0 = -5, elo1 = 0)."
	echo "    -t <rounds>"
	echo "        Run a fixed-round test. Each round has two games so divide"
	echo "        the desired rounds by 2."
	echo "    -i <interval>"
	echo "        Set the rating interval to <interval>. Default $default_rating_interval."
	echo "    -b <branch>"
	echo "        Compare <branch> against master. This is the default."
	echo "    -e"
	echo "        Compare two engines against each other with the same names"
	echo "        as the last two arguments. The first engine is the second-"
	echo "        to-last argument; the second engine is the last argument."
	echo "    -h"
	echo "        Show this message."
	exit 0
}

trap die 2

while getopts "r:c:pgst:i:b:eh" option
do
	case $option in
		r)
			root_dir=$OPTARG
			;;
		c)
			concurrency=$OPTARG
			;;
		p)
			run_sprt=1
			rounds=$default_rounds
			refresh_sprt_cmd
			;;
		g)
			elo0=0
			elo1=5
			;;
		s)
			elo0=-5
			elo1=0
			;;
		t)
			run_sprt=0
			rounds=$OPTARG
			;;
		i)
			rating_interval=$OPTARG
			;;
		b)
			use_engine_names=0
			branch=$OPTARG
			;;
		e)
			use_engine_names=1
			;;
		h)
			help
			;;
	esac
done

shift $(($OPTIND - 1))
cd $root_dir

if [ $run_sprt -eq 1 ]; then
	sprt_cmd="-sprt elo0=$elo0 elo1=$elo1 alpha=0.05 beta=0.05"
fi

if [ $use_engine_names -eq 1 ]; then
	new_cmd=$1
	base_cmd=$2
else
	branch=$(git branch --show-current)
	new_branch=$1
	base_branch=master
	new_cmd=$sprt_dir/"$new_branch"_git
	base_cmd=$sprt_dir/"$base_branch"_git
	git checkout $new_branch
	cargo build --release
	mv -f $root_dir/target/release/crab $new_cmd
	git checkout $base_branch
	cargo build --release
	mv -f $root_dir/target/release/crab $base_cmd
fi

cutechess-cli \
	-engine cmd=$new_cmd proto=uci \
	-engine cmd=$base_cmd proto=uci \
	-each tc=$tc \
	-variant standard \
	-concurrency $concurrency \
	$sprt_cmd \
	-games 2 -rounds $rounds -repeat 2 \
	-ratinginterval $rating_interval \
	-openings file=$opening_file format=epd order=random \
	-pgnout $sprt_dir/$date.pgn \
	-resign movecount=3 score=300 \
	-draw movenumber=40 movecount=3 score=10
	#-debug

die
